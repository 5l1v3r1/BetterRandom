-optimizationpasses 5
-dontskipnonpubliclibraryclasses
# Library standard settings
-keepparameternames
-renamesourcefileattribute SourceFile
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod,StackMap,StackMapTable
-keep public class * {
  public protected *;
}
-keepclassmembernames class * {
  java.lang.Class class$(java.lang.String);
  java.lang.Class class$(java.lang.String, boolean);
}
-keepclasseswithmembernames,includedescriptorclasses class * {
  native <methods>;
}
-keepclassmembers,allowoptimization enum * {
  public static **[] values();
  public static ** valueOf(java.lang.String);
}
# Serialization settings
-keepclassmembers class * implements java.io.Serializable { static final long
serialVersionUID; private static final java.io.ObjectStreamField[]
serialPersistentFields; private void writeObject(java.io.ObjectOutputStream);
private void readObject(java.io.ObjectInputStream);
private void readObjectNoData(); java.lang.Object writeReplace(); java.lang.Object
readResolve(); !static !transient &lt;fields&gt;; }
<!-- Allow deletion of castNonNull -->
-assumenosideeffects public class
org.checkerframework.checker.nullness.NullnessUtil
<!-- Work around a MethodHandle.invokeExact signature-check issue -->
-dontwarn java.lang.invoke**
<!-- Work around an optimization bug -->
<!-- -dontoptimize class io.github.pr0methean.betterrandom.prng.RandomWrapperper -->
</options>